name: Build Armbian Kernel (non-ophub)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      build_repo:
        description: "Enter the build repo"
        required: true
        default: "https://github.com/armbian/build"
        type: string
      kernel_version_type:
        description: "Select kernel type"
        required: true
        default: "current"
        type: choice
        options:
          - current
          - edge
          - legacy
      target_board:
         description: "Enter the build target (See https://github.com/armbian/build/tree/main/config/boards)"
         required: true
         type: string
      version_codename:
         description: "Enter the version codename (See https://github.com/armbian/build/tree/main/config/distributions)"
         required: true
         type: string
         default: "bookworm"

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}


    steps:
        - name: Initialization environment
          id: init
          env:
            DEBIAN_FRONTEND: noninteractive
          run: |
            docker rmi `docker images -q`
            [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
            sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
            sudo -E apt-get -y update
            sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
            sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
            sudo -E systemctl daemon-reload
            #sudo -E apt-get -y full-upgrade
            sudo -E apt-get -y autoremove --purge
            sudo -E apt-get clean
            sudo timedatectl set-timezone "${TZ}"
            echo "status=success" >> ${GITHUB_OUTPUT}

        - name: Download build repo
          env:
            DEBIAN_FRONTEND: noninteractive
          run: |
            git clone --depth=1 --branch=main ${{ inputs.build_repo }} build

        - name: Start Build
          env:
            DEBIAN_FRONTEND: noninteractive
          run: |
            cd build
            sudo ./compile.sh BUILD_ONLY="u-boot,kernel,armbian-config,armbian-zsh,plymouth-theme-armbian,armbian-firmware,armbian-bsp" BUILD_DESKTOP=no BUILD_MINIMAL=yes BRANCH=${{ inputs.kernel_version_type }} RELEASE=${{ inputs.version_codename }} BOARD=${{ inputs.target_board }}
            
